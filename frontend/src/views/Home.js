import { useState } from "react"
import {
  Card,
  CardHeader,
  CardBody,
  CardTitle,
  CardText,
  Col,
  Row,
  Spinner
} from "reactstrap"
import FileUploaderSingle from "./fileUploader/index"
// import serverDown from "../assets/images/office-server.gif"
import RenderImage from "./RenderImage"
// ** Styles
import "@styles/react/libs/tables/react-dataTable-component.scss"

const Home = () => {
  const [ready, setReady] = useState(false)
  const [responseData, setResponseData] = useState([])
  const [progress, setProgress] = useState(0)
  const checkresult = (data) => {
    for (const item of data)  {
      if (item.predictions.length > 0) return 
    }
    return (
      <p>
        <b>–ù–∞ –≤–∏–¥–µ–æ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤ —Ç–æ—Ä–≥–æ–≤–ª–∏</b>
      </p>
    )
  }
    return (
      <div>
        <Card>
          <CardHeader>
            <CardTitle>–ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∞—à —Ñ–∞–π–ª –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã üöÄ</CardTitle>
          </CardHeader>
          <CardBody>
            <CardText>–ú—ã –æ–∂–∏–¥–∞–µ–º –æ—Ç –≤–∞—Å –≤–∏–¥–µ–æ —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ <b>.mp4</b> –∏–ª–∏ <b>.mov</b></CardText>
            <FileUploaderSingle
              responseData={responseData}
              setResponseData={setResponseData}
              setReady={setReady}
              progress={progress}
              setProgress={setProgress}
            />
          </CardBody>
        </Card>
        <Card>
        
          <CardHeader>
            <CardTitle>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ üéØ</CardTitle>
          </CardHeader>
          <CardBody>
          <CardText>–í–∏–¥–µ–æ —Ñ–∞–π–ª –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –ø–æ–∫–∞–¥—Ä–æ–≤–æ, —Å–ø–∏—Å–æ–∫ –±—É–¥–µ—Ç –¥–æ–ø–æ–ª–Ω—è—Ç—å—Å—è –ø–æ–∫–∞ –∫—Ä—É—Ç–∏—Ç—Å—è —Å–ø–∏–Ω–Ω–µ—Ä, —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö</CardText>
          <Row>
     
          {ready &&
          // eslint-disable-next-line
            responseData.map((item, index) => item.predictions.length !== 0 ? 
              (
                <Col md="6" xs="12" key={index}>
                  <RenderImage responseData={item} key={index} />
                </Col>
              ) : (
                ""
              )
            )}
            {ready && progress > 0 && progress < 100 && (
              
              <Col md="6" xs="12">
                <Card>
                  <Spinner color='danger' />
                </Card>
              </Col>
            )}
            { progress === 100 ? checkresult(responseData) : ''}
            </Row>
            </CardBody>
        </Card>
      </div>
    )
  
    // return (
    //   <>
    //     <Card>
    //       <CardHeader>
    //         <CardTitle>–û—à–∏–±–∫–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É =(</CardTitle>
    //       </CardHeader>
    //       <CardBody>
    //         <h5>
    //           –ü–æ—Ö–æ–∂–µ —Å–Ω–µ–≥—É—Ä–æ—á–∫–∞ –≤—ã–¥–µ—Ä–Ω—É–ª–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä —Å –±—ç–∫–æ–º –∏–∑ —Ä–æ–∑–µ—Ç–∫–∏, –µ—Å–ª–∏ –≤—ã
    //           —Ö–æ—Ç–µ–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ —Ä–∞–±–æ—Ç—É —Å–µ—Ä–≤–∏—Å–∞ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –∏
    //           –º—ã –≤—Å–µ –ø–æ—á–∏–Ω–∏–º:
    //         </h5>
    //         <ul>
    //           <li>
    //             <a href="https://t.me/gesitnikov">@gesitnikov</a>
    //           </li>
    //           <li>
    //             <a href="https://t.me/artrsv">@artrsv</a>
    //           </li>
    //         </ul>
    //         <div>
    //           <img src={serverDown} alt="" />
    //         </div>
    //       </CardBody>
    //     </Card>
    //   </>
    // )
  }


export default Home
